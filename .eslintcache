[{"C:\\MyProjects\\React\\myapp16\\src\\index.js":"1","C:\\MyProjects\\React\\myapp16\\src\\App.js":"2","C:\\MyProjects\\React\\myapp16\\src\\components\\SimpleInput.js":"3","C:\\MyProjects\\React\\myapp16\\src\\components\\hooks\\use-input.js":"4","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\index.js":"5","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\App.js":"6","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\SimpleInput.js":"7","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\hooks\\use-input.js":"8","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\BasicForm.js":"9","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\BasicForm2.js":"10","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\hooks\\use-input2.js":"11"},{"size":142,"mtime":1643340615335,"results":"12","hashOfConfig":"13"},{"size":168,"mtime":1643340615370,"results":"14","hashOfConfig":"13"},{"size":2253,"mtime":1643583763389,"results":"15","hashOfConfig":"13"},{"size":758,"mtime":1643582300599,"results":"16","hashOfConfig":"13"},{"size":142,"mtime":1643340615335,"results":"17","hashOfConfig":"18"},{"size":331,"mtime":1643688309511,"results":"19","hashOfConfig":"18"},{"size":2220,"mtime":1643584201490,"results":"20","hashOfConfig":"18"},{"size":724,"mtime":1643683469446,"results":"21","hashOfConfig":"18"},{"size":3309,"mtime":1643683347895,"results":"22","hashOfConfig":"18"},{"size":3501,"mtime":1643688169186,"results":"23","hashOfConfig":"18"},{"size":1249,"mtime":1643688093139,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"34bge2",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"f4swdj",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MyProjects\\React\\myapp16\\src\\index.js",[],"C:\\MyProjects\\React\\myapp16\\src\\App.js",[],"C:\\MyProjects\\React\\myapp16\\src\\components\\SimpleInput.js",["52","53","54"],"import { useState } from 'react';\nimport useInput from './hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const validateEmail = (input) => {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(input);\n  };\n\n  const {\n    value: enteredName, \n    isValid:enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler : nameInputChangeHandler,\n    inputBlurHandler : nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n  const {\n    value: enteredEmail, \n    isValid:enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler : emailInputChangeHandler,\n    inputBlurHandler : emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput( value => value.trim() !== '' && validateEmail(value) );\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n\n  };\n\n  const nameInputClasses = nameInputHasError \n    ? 'form-control invalid' \n    : 'form-control';\n\n    const emailInputClasses = emailInputHasError\n    ? 'form-control invalid' \n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}/>\n          {nameInputHasError && <p className='error-text'>Name must not be blank</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='email' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}/>\n          {emailInputHasError && <p className='error-text'>Email must not be blank</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\MyProjects\\React\\myapp16\\src\\components\\hooks\\use-input.js",[],["55","56"],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\index.js",[],["57","58"],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\App.js",[],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\SimpleInput.js",["59","60"],"import useInput from './hooks/use-input';\n\nconst SimpleInput = (props) => {\n\n  const validateEmail = (input) => {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(input);\n  };\n\n  const {\n    value: enteredName, \n    isValid:enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler : nameInputChangeHandler,\n    inputBlurHandler : nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n  const {\n    value: enteredEmail, \n    isValid:enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler : emailInputChangeHandler,\n    inputBlurHandler : emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput( value => value.trim() !== '' && validateEmail(value) );\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n\n  };\n\n  const nameInputClasses = nameInputHasError \n    ? 'form-control invalid' \n    : 'form-control';\n\n    const emailInputClasses = emailInputHasError\n    ? 'form-control invalid' \n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}/>\n          {nameInputHasError && <p className='error-text'>Name must not be blank</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='email' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}/>\n          {emailInputHasError && <p className='error-text'>Email must not be blank</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["61","62"],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\hooks\\use-input.js",[],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\BasicForm.js",[],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\BasicForm2.js",[],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\hooks\\use-input2.js",[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":6,"column":19,"nodeType":"69","messageId":"70","endLine":6,"endColumn":20,"suggestions":"71"},{"ruleId":"67","severity":1,"message":"68","line":6,"column":35,"nodeType":"69","messageId":"70","endLine":6,"endColumn":36,"suggestions":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"67","severity":1,"message":"68","line":6,"column":19,"nodeType":"69","messageId":"70","endLine":6,"endColumn":20,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"68","line":6,"column":35,"nodeType":"69","messageId":"70","endLine":6,"endColumn":36,"suggestions":"80"},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","replacedBy":"82"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["83","84"],["85","86"],"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],["89","90"],["91","92"],["87"],["88"],{"messageId":"93","fix":"94","desc":"95"},{"messageId":"96","fix":"97","desc":"98"},{"messageId":"93","fix":"99","desc":"95"},{"messageId":"96","fix":"100","desc":"98"},"no-global-assign","no-unsafe-negation",{"messageId":"93","fix":"101","desc":"95"},{"messageId":"96","fix":"102","desc":"98"},{"messageId":"93","fix":"103","desc":"95"},{"messageId":"96","fix":"104","desc":"98"},"removeEscape",{"range":"105","text":"106"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"107","text":"108"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"109","text":"106"},{"range":"110","text":"108"},{"range":"111","text":"106"},{"range":"112","text":"108"},{"range":"113","text":"106"},{"range":"114","text":"108"},[165,166],"",[165,165],"\\",[181,182],[181,181],[132,133],[132,132],[148,149],[148,148]]