[{"C:\\MyProjects\\React\\myapp16\\src\\index.js":"1","C:\\MyProjects\\React\\myapp16\\src\\App.js":"2","C:\\MyProjects\\React\\myapp16\\src\\components\\SimpleInput.js":"3","C:\\MyProjects\\React\\myapp16\\src\\components\\hooks\\use-input.js":"4"},{"size":142,"mtime":1643340615335,"results":"5","hashOfConfig":"6"},{"size":168,"mtime":1643340615370,"results":"7","hashOfConfig":"6"},{"size":2253,"mtime":1643583763389,"results":"8","hashOfConfig":"6"},{"size":758,"mtime":1643582300599,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"34bge2",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\MyProjects\\React\\myapp16\\src\\index.js",[],"C:\\MyProjects\\React\\myapp16\\src\\App.js",[],"C:\\MyProjects\\React\\myapp16\\src\\components\\SimpleInput.js",["20","21","22"],"import { useState } from 'react';\nimport useInput from './hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const validateEmail = (input) => {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(input);\n  };\n\n  const {\n    value: enteredName, \n    isValid:enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler : nameInputChangeHandler,\n    inputBlurHandler : nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n  const {\n    value: enteredEmail, \n    isValid:enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler : emailInputChangeHandler,\n    inputBlurHandler : emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput( value => value.trim() !== '' && validateEmail(value) );\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n\n  };\n\n  const nameInputClasses = nameInputHasError \n    ? 'form-control invalid' \n    : 'form-control';\n\n    const emailInputClasses = emailInputHasError\n    ? 'form-control invalid' \n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}/>\n          {nameInputHasError && <p className='error-text'>Name must not be blank</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='email' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}/>\n          {emailInputHasError && <p className='error-text'>Email must not be blank</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\MyProjects\\React\\myapp16\\src\\components\\hooks\\use-input.js",[],["23","24"],{"ruleId":"25","severity":1,"message":"26","line":1,"column":10,"nodeType":"27","messageId":"28","endLine":1,"endColumn":18},{"ruleId":"29","severity":1,"message":"30","line":6,"column":19,"nodeType":"31","messageId":"32","endLine":6,"endColumn":20,"suggestions":"33"},{"ruleId":"29","severity":1,"message":"30","line":6,"column":35,"nodeType":"31","messageId":"32","endLine":6,"endColumn":36,"suggestions":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["39","40"],["41","42"],"no-native-reassign",["43"],"no-negated-in-lhs",["44"],{"messageId":"45","fix":"46","desc":"47"},{"messageId":"48","fix":"49","desc":"50"},{"messageId":"45","fix":"51","desc":"47"},{"messageId":"48","fix":"52","desc":"50"},"no-global-assign","no-unsafe-negation","removeEscape",{"range":"53","text":"54"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"55","text":"56"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"57","text":"54"},{"range":"58","text":"56"},[165,166],"",[165,165],"\\",[181,182],[181,181]]