[{"C:\\MyProjects\\React\\myapp16\\src\\index.js":"1","C:\\MyProjects\\React\\myapp16\\src\\App.js":"2","C:\\MyProjects\\React\\myapp16\\src\\components\\SimpleInput.js":"3","C:\\MyProjects\\React\\myapp16\\src\\components\\hooks\\use-input.js":"4","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\index.js":"5","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\App.js":"6","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\SimpleInput.js":"7","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\hooks\\use-input.js":"8","C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\BasicForm.js":"9"},{"size":142,"mtime":1643340615335,"results":"10","hashOfConfig":"11"},{"size":168,"mtime":1643340615370,"results":"12","hashOfConfig":"11"},{"size":2253,"mtime":1643583763389,"results":"13","hashOfConfig":"11"},{"size":758,"mtime":1643582300599,"results":"14","hashOfConfig":"11"},{"size":142,"mtime":1643340615335,"results":"15","hashOfConfig":"16"},{"size":248,"mtime":1643677301567,"results":"17","hashOfConfig":"16"},{"size":2220,"mtime":1643584201490,"results":"18","hashOfConfig":"16"},{"size":724,"mtime":1643683469446,"results":"19","hashOfConfig":"16"},{"size":3309,"mtime":1643683347895,"results":"20","hashOfConfig":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"34bge2",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"f4swdj",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MyProjects\\React\\myapp16\\src\\index.js",[],"C:\\MyProjects\\React\\myapp16\\src\\App.js",[],"C:\\MyProjects\\React\\myapp16\\src\\components\\SimpleInput.js",["44","45","46"],"import { useState } from 'react';\nimport useInput from './hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const validateEmail = (input) => {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(input);\n  };\n\n  const {\n    value: enteredName, \n    isValid:enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler : nameInputChangeHandler,\n    inputBlurHandler : nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n  const {\n    value: enteredEmail, \n    isValid:enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler : emailInputChangeHandler,\n    inputBlurHandler : emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput( value => value.trim() !== '' && validateEmail(value) );\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n\n  };\n\n  const nameInputClasses = nameInputHasError \n    ? 'form-control invalid' \n    : 'form-control';\n\n    const emailInputClasses = emailInputHasError\n    ? 'form-control invalid' \n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}/>\n          {nameInputHasError && <p className='error-text'>Name must not be blank</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='email' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}/>\n          {emailInputHasError && <p className='error-text'>Email must not be blank</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\MyProjects\\React\\myapp16\\src\\components\\hooks\\use-input.js",[],["47","48"],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\index.js",[],["49","50"],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\App.js",[],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\SimpleInput.js",["51","52"],"import useInput from './hooks/use-input';\n\nconst SimpleInput = (props) => {\n\n  const validateEmail = (input) => {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(input);\n  };\n\n  const {\n    value: enteredName, \n    isValid:enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler : nameInputChangeHandler,\n    inputBlurHandler : nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n  const {\n    value: enteredEmail, \n    isValid:enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler : emailInputChangeHandler,\n    inputBlurHandler : emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput( value => value.trim() !== '' && validateEmail(value) );\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n\n  };\n\n  const nameInputClasses = nameInputHasError \n    ? 'form-control invalid' \n    : 'form-control';\n\n    const emailInputClasses = emailInputHasError\n    ? 'form-control invalid' \n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}/>\n          {nameInputHasError && <p className='error-text'>Name must not be blank</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='email' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}/>\n          {emailInputHasError && <p className='error-text'>Email must not be blank</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["53","54"],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\hooks\\use-input.js",[],"C:\\MyProjects\\myReactProjects\\useInput-customHooks\\src\\components\\BasicForm.js",[],{"ruleId":"55","severity":1,"message":"56","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":6,"column":19,"nodeType":"61","messageId":"62","endLine":6,"endColumn":20,"suggestions":"63"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":35,"nodeType":"61","messageId":"62","endLine":6,"endColumn":36,"suggestions":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":19,"nodeType":"61","messageId":"62","endLine":6,"endColumn":20,"suggestions":"71"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":35,"nodeType":"61","messageId":"62","endLine":6,"endColumn":36,"suggestions":"72"},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["75","76"],["77","78"],"no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],["81","82"],["83","84"],["79"],["80"],{"messageId":"85","fix":"86","desc":"87"},{"messageId":"88","fix":"89","desc":"90"},{"messageId":"85","fix":"91","desc":"87"},{"messageId":"88","fix":"92","desc":"90"},"no-global-assign","no-unsafe-negation",{"messageId":"85","fix":"93","desc":"87"},{"messageId":"88","fix":"94","desc":"90"},{"messageId":"85","fix":"95","desc":"87"},{"messageId":"88","fix":"96","desc":"90"},"removeEscape",{"range":"97","text":"98"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"99","text":"100"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"101","text":"98"},{"range":"102","text":"100"},{"range":"103","text":"98"},{"range":"104","text":"100"},{"range":"105","text":"98"},{"range":"106","text":"100"},[165,166],"",[165,165],"\\",[181,182],[181,181],[132,133],[132,132],[148,149],[148,148]]